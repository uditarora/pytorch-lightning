name: "Python static type checking"
on: [push, pull_request]

jobs:
  python_type_checking:
    name: Python static type checking with Pyright
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        python-version: [3.7]
        requires: ['latest']

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # Note: This uses an internal pip API and may not always work
      # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
      - name: Get pip cache
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-extra.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}-pip-

      - name: Install dependencies
        run: |
          # python -m pip install --upgrade --user pip
          pip install -r requirements.txt -U -f https://download.pytorch.org/whl/torch_stable.html -q
          HOROVOD_BUILD_ARCH_FLAGS="-mfma" pip install -r ./tests/requirements-devel.txt -q
          # pip install tox coverage
          python --version
          pip --version
          pip list
        shell: bash

      - name: Reinstall Horovod if necessary
        if: runner.os != 'windows' && matrix.python-version != '3.8'
        run: |
          HOROVOD_BUILT=$(python -c "import horovod.torch; horovod.torch.nccl_built(); print('SUCCESS')")
          if [[ $HOROVOD_BUILT != "SUCCESS" ]]; then
            pip uninstall -y horovod
            HOROVOD_BUILD_ARCH_FLAGS="-mfma" pip install --no-cache-dir $(grep "horovod" requirements-extra.txt)
          fi
          horovodrun --check-build
        shell: bash

      - name: Set up node
        uses: actions/setup-node@v1

      - name: Install pyright
        run: |
          npm install pyright

      - name: Run type checking
        run: |
          $(npm bin)/pyright pytorch_lightning/
